[in_out]
; Absolute path to input fits files.
; Example : data/catalogs/FS2_galaxies_obsz_photoz_ra_dec_mag_gamma1_gamma2_magcut245_fullsample.fits
catalog_lens = /home/hidra2/gouyou/euclid/3x2/cerberus/my_data/fs2-30deg-nomag-nored-nowht/pos_catalog.fits
catalog_source = /home/hidra2/gouyou/euclid/3x2/cerberus/my_data/fs2-30deg-nomag-nored-nowht/wl_catalog_clean.fits
; Absolute path to the output fits file containing the estimated Cl.
; The name of the file will be the ref given at the end + _probes_nzbins_nside_ellbin.fits.
; Example : ../data/measurement/blabla_GC_NZ13_NS1024_BW5.fits
output_name = ../data/measurement/3x2_30deg_nonbinary_vmap
; Absolute path to the fits file containing the mask.
; It has to has been generated with the same NSIDE used here.
; Example : ../data/mask/flagship2_mask_binary_NS1024.fits
mask = /home/hidra2/gouyou/euclid/3x2/cerberus/my_data/fs2-30deg-nomag-nored-nowht/vmap.fits
; twopoint or numpy
output_format = twopoint

[pixels]
nside = 1024
; Divide out the pixel window function
depixelate = True

[probe_selection]
probes = [GC, WL, GGL]
; List of probes for which I want the cross
cross = [WL, GGL]

[ell_binning]
; Which ell binning to use.
lmin = 10
binwidth = 50

[noise]
; Whether to subtract the noise bias or no
debias = True

[z_binning]
; The number of tomographic bins
nztot = 6
; min and max edge of the whole sample. Apply to both lens and source for now
zmin = 0.2
zmax = 2.5
; On which bins are we actually etimating Pseudo-Cl
selected_bins = [0,1,2,3,4,5]
; Whether to save the n(z) and number of galaxy per arcmin2
save_nofz = True
; File name for n(z) and ngal
nofz_name = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/nofz/FS2_nofz_6EPbins_30deg_cone.txt
ngal_name = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/nofz/FS2_ngal_6EPbins_30deg_cone.txt
; Whether to stop after saving the n(z) and ngal
only_nofz = False
; How to divide the sample. ED is Equi-Distant and EP_weight is Equi-Populated
; accounting for the weights.
division = EP_weight
; Which redshift to use to construct the n(z). true_redshift_gal is the true
; redshift in a simulation. obs_redshift_gal is the redshift affected by velocity.
nofz_redshift_type = true_redshift_gal
