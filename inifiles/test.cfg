[in_out]
; Absolute path to input fits file.
; Example : data/catalogs/FS2_galaxies_obsz_photoz_ra_dec_mag_gamma1_gamma2_magcut245_fullsample.fits
catalog_lens = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/catalogs/FS2_galaxies_obsz_photoz_ra_dec_mag_gamma1_gamma2_magcut245_subsample_1-10000.fits
catalog_source = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/catalogs/FS2_galaxies_obsz_photoz_ra_dec_mag_gamma1_gamma2_magcut245_subsample_1-10000.fits

; Absolute path to the fits file containing the mask.
; It has to has been generated with the same NSIDE used here.
; Example : ../data/mask/flagship2_mask_binary_NS1024.fits
mask = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/mask/flagship2_mask_binary_NS256.fits

;name of maps and noise dic to be read if load_maps=True. The name of the output files is constructed from output_dir
maps_noise_name = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/measurement/FS2_test_coupled_noise_Nodepixalate/FS2_test_coupled_noise_Nodepixalate_maps_noise_NS1024.npy
;name of ngal and nofz dics to be read if load_maps=True. The name of the output files is constructed from output_dir
nofz_name = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/measurement/FS2_test_coupled_noise_Nodepixalate/FS2_test_coupled_noise_Nodepixalate_nofz.npy
ngal_name = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/measurement/FS2_test_coupled_noise_Nodepixalate/FS2_test_coupled_noise_Nodepixalate_ngal.npy

; Absolute path to the output directory.
; The name of the file will be the ref given at the end + _probes_nzbins_nside_ellbin.fits.
; Example : ../data/measurement/blabla_GC_NZ13_NS1024_BW5.fits
output_dir = /home/hidra2/gouyou/euclid/nl_bias_flagship/data/measurement/FS2_test
; twopoint or numpy
output_format = twopoint

[columns_lens]
ra = ra
dec = dec
zp = zp
phz_weight = phz_weight

[columns_source]
ra = ra
dec = dec
gamma1 = gamma1
gamma2 = gamma2
zp = zp
she_weight = she_weight

[spectra]
decoupling = False

[maps]
nside = 256
save_maps = False
load_maps = False
; Divide out the pixel window function
depixelate = False

[probe_selection]
probes = [GC, WL]
; List of probes for which we want the cross-Cl's
cross = []

[ell_binning]
; Which ell binning to use. log or lin.
; log uses (lmin, nside, nell)
; lin uses (lmin, nside, binwidth)
ell_binning = log
lmax = 256
nell = 32
lmin = 10
binwidth = 150

[noise]
debias = True

[z_binning]
; The number of galaxy equidistant tomographic bins
nztot = 6
zmin = 0.2
zmax = 2.54
selected_bins = [1,5]
# Can be ED for equidistant or EP_weight for Equipopulated using weights
division = ED
nofz_redshift_type = true_redshift_gal

[apodization]
apodize = False
; The type of apodization. Can be Smooth, C1 or C2
apotype = Smooth
; The scale of apodization in degree
aposcale = 1
